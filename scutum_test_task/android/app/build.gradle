plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
    id "com.google.gms.google-services"
    // Apply the Firebase App Distribution plugin
    id 'com.google.firebase.appdistribution'
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

android {
    namespace "com.example.scutum_test_task"
    compileSdk flutter.compileSdkVersion
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.example.scutum_test_task"
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
        minSdkVersion flutter.minSdkVersion
        targetSdkVersion flutter.targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    signingConfigs {
        release {
                firebaseAppDistribution {
                    appId = "1:831846502146:android:32d3685d4feec7c01bfc1b" // Replace with your actual Firebase App ID
                    serviceCredentialsFile=System.getenv("GOOGLE_APPLICATION_CREDENTIALS")
                    // serviceCredentialsFile= System.getenv()["CI"] ? "/Users/builder/clone/scutum_test_task/android/scutum-test-task-d7a0c66ab5bc.json": System.getenv("GOOGLE_APPLICATION_CREDENTIALS")
                    testers="mosissa.alex@gmail.com"
                    groups= "android_testers"
                }
              if (System.getenv()["CI"]) { // CI=true is exported by Codemagic
                  storeFile file(System.getenv()["CM_KEYSTORE_PATH"])
                  storePassword System.getenv()["CM_KEYSTORE_PASSWORD"]
                  keyAlias System.getenv()["CM_KEY_ALIAS"]
                  keyPassword System.getenv()["CM_KEY_PASSWORD"]
              } else {
                    storeFile file("android.keystore")
                    storePassword "123123"
                    keyAlias "1"
                    keyPassword "123123"
                //   keyAlias keystoreProperties['keyAlias']
                //   keyPassword keystoreProperties['keyPassword']
                //   storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
                //   storePassword keystoreProperties['storePassword']
              }
          }
        // release {
        //     storeFile file("android.keystore")
        //     storePassword "123123"
        //     keyAlias "1"
        //     keyPassword "123123"
        // }
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.release
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation(platform("com.google.firebase:firebase-bom:32.7.2"))
    implementation("com.google.firebase:firebase-analytics")
}
